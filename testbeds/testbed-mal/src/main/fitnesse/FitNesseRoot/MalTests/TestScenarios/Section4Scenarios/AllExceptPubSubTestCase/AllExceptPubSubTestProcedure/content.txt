# ----------------------------------------------------------------------------
# Copyright (C) 2013      European Space Agency
#                         European Space Operations Centre
#                         Darmstadt
#                         Germany
# ----------------------------------------------------------------------------
# System                : CCSDS MO MAL Test bed
# ----------------------------------------------------------------------------
# Licensed under the European Space Agency Public License, Version 2.0
# You may not use this file except in compliance with the License.
#
# Except as expressly set forth in this License, the Software is provided to
# You on an "as is" basis and without warranties of any kind, including without
# limitation merchantability, fitness for a particular purpose, absence of
# defects or errors, accuracy or non-infringement of intellectual property rights.
# 
# See the License for the specific language governing permissions and
# limitations under the License. 
# ----------------------------------------------------------------------------

!*< Hidden
!define TEST_SYSTEM {slim}

|Import|
|org.ccsds.moims.mo.mal.test.patterns|

*******!
!4 Test procedure: all patterns except Pub/Sub
The test procedure iterates over the following actions:
 1 Call the proper pattern type operation provided by the IPTest service with the parameters passed to the test procedure.
 2 Wait for the expected transitions to be done, except the faulty ones that are ignored.
 3 Check the message headers
 4 Check the transitions

It is necessary to go through all the transitions of the IP state charts, the faulty transitions are underlined.
In the faulty case, the field 'errorCode' of the IPTestTransition is set to the value INCORRECT_STATE otherwise it is set to "-1".

The test procedure relies on parameterized FitNesse sub scenarios in order to iterate through all the tested behaviours.

The consumer initiates the patterns by calling the following operations provided by the service IPTest:
 * testSubmit
 * request
 * invoke
 * progress
Those operations accept a single IPTestDefinition parameter. This parameter is notably used by the provider to execute a predefined behaviour.
Variants of those operations are defined by the service IPTest, with an empty body for the OUT messages, or with an additional parameter in the body of the initial IN message:
 * submitMulti
 * testRequestEmptyBody, requestMulti
 * testInvokeEmptyBody, invokeMulti
 * testProgressEmptyBody, progressMulti
Those additional operations implement the same behaviour than the regular ones, with the same IPTestDefinition parameter.
All those operations shall be called in the FitNesse sub scenario named !-PatternWithSupplementsAndTransitionsAndBehaviourIdTest-!.
This sub scenario shall be executed several times for each tested behaviour, with additional environment parameters, in a sub scenario named !-TestInteractionPatternWithTransitionsAndBehaviourId-!.

The possible values of the sub scenario parameters are:
-!|Comment|
|parameter|values|comment|
|interaction pattern|Submit, Request, Invoke, Progress|name of the tested IP|
|transitions|{_M_}*,{M}*,{_M_}*, with M in ACK, ACK_ERROR, UPDATE, UPDATE_ERROR, RESPONSE, RESPONSE_ERROR|list of expected messages to be sent by the provider according to the tested behaviour, starting with a list of initial faulty messages sent by the testbed, followed by the list of regular messages sent by the provider, followed by a list of final faulty messages sent by the testbed|
|behaviour id|numeric|numeric identifier used by the consumer and the provider to perform actions specific to the tested behaviour|
|supplements|Empty, Full|environment parameter used to set the supplements header field, either empty or with a full set of various attribute types|

The 'transitions' parameter describes the MAL messages exchanged from the provider MAL to the consumer MAL. It is used by the consumer to check the correctness of the indications it receives according to the test procedure.
The 'behaviour id' parameter is used by the provider to actually send the messages expected by the test procedure.

The transitions are checked by ensuring that the consumer receives proper indications, even when the consumer MAL receives faulty messages.



!*> Sub scenario definitions
|scenario| pattern | interaction | with supplements| supplements | and transitions | trans | and behaviour id | id | test |
|ensure |pattern initiation for| @interaction | with multi| false | with empty body| false | and supplements| @supplements | and transitions | @trans | and behaviour id | @id | test |
|ensure |the consumer assertions are ok|
|ensure |the transitions are ok|
|ensure |pattern initiation for| @interaction | with multi| false | with empty body| true | and supplements| @supplements | and transitions | @trans | and behaviour id | @id | test |
|ensure |the consumer assertions are ok|
|ensure |the transitions are ok|
|ensure |pattern initiation for| @interaction | with multi| true | with empty body| false | and supplements| @supplements | and transitions | @trans | and behaviour id | @id | test |
|ensure |the consumer assertions are ok|
|ensure |the transitions are ok|

|scenario| test interaction pattern | interaction | with transitions | trans | and behaviour id | id |
|pattern | @interaction | with supplements | Empty | and transitions | @trans | and behaviour id | @id | test |
|pattern | @interaction | with supplements | Full | and transitions | @trans | and behaviour id | @id | test |

***********!

|script| pattern test|
|note| Submit pattern test|
|test interaction pattern | Submit| with transitions | [ACK] | and behaviour id | 1 |
|test interaction pattern | Submit| with transitions | [ACK_ERROR] | and behaviour id | 2 |
|test interaction pattern | Submit| with transitions | [ACK, _ACK_ERROR_] | and behaviour id | 3 |
|test interaction pattern | Submit| with transitions | [ACK_ERROR, _ACK_ERROR_] | and behaviour id | 4 |

|script| pattern test|
|note| Request pattern test|
|test interaction pattern | Request| with transitions | [RESPONSE] | and behaviour id | 1 |
|test interaction pattern | Request| with transitions | [RESPONSE_ERROR] | and behaviour id | 2 |
|test interaction pattern | Request| with transitions | [RESPONSE, _RESPONSE_] | and behaviour id | 3 |
|test interaction pattern | Request| with transitions | [RESPONSE_ERROR, _RESPONSE_] | and behaviour id | 4 |

|script| pattern test|
|note| Invoke pattern test|
|test interaction pattern | Invoke| with transitions | [ACK, RESPONSE] | and behaviour id | 1 |
|test interaction pattern | Invoke| with transitions | [ACK, RESPONSE_ERROR] | and behaviour id | 2 |
|test interaction pattern | Invoke| with transitions | [ACK_ERROR] | and behaviour id | 3 |
|test interaction pattern | Invoke| with transitions | [ACK, RESPONSE, _RESPONSE_] | and behaviour id | 4 |
|test interaction pattern | Invoke| with transitions | [ACK, RESPONSE_ERROR, _RESPONSE_] | and behaviour id | 5 |
|test interaction pattern | Invoke| with transitions | [ACK_ERROR, _ACK_] | and behaviour id | 6 |
|test interaction pattern | Invoke| with transitions | [_RESPONSE_, ACK, RESPONSE] | and behaviour id | 7 |
|test interaction pattern | Invoke| with transitions | [ACK, _ACK_] | and behaviour id | 8 |

|script| pattern test|
|note| Progress pattern test|
|test interaction pattern | Progress| with transitions | [ACK, RESPONSE] | and behaviour id | 1 |
|test interaction pattern | Progress| with transitions | [ACK, RESPONSE_ERROR] | and behaviour id | 2 |
|test interaction pattern | Progress| with transitions | [ACK_ERROR] | and behaviour id | 3 |
|test interaction pattern | Progress| with transitions | [ACK, UPDATE, UPDATE, RESPONSE] | and behaviour id | 4 |
|test interaction pattern | Progress| with transitions | [ACK, UPDATE, UPDATE, UPDATE_ERROR] | and behaviour id | 5 |
|test interaction pattern | Progress| with transitions | [ACK, UPDATE, UPDATE, RESPONSE_ERROR] | and behaviour id | 6 |
|test interaction pattern | Progress| with transitions | [ACK, RESPONSE, _RESPONSE_] | and behaviour id | 7 |
|test interaction pattern | Progress| with transitions | [ACK, RESPONSE_ERROR, _RESPONSE_] | and behaviour id | 8 |
|test interaction pattern | Progress| with transitions | [ACK, _ACK_ERROR_] | and behaviour id | 8 |
|test interaction pattern | Progress| with transitions | [ACK, _ACK_] | and behaviour id | 9 |
|test interaction pattern | Progress| with transitions | [_UPDATE_, ACK, UPDATE, UPDATE, RESPONSE] | and behaviour id | 10 |
|test interaction pattern | Progress| with transitions | [_UPDATE_ERROR_, ACK, UPDATE, UPDATE, RESPONSE] | and behaviour id | 11 |
|test interaction pattern | Progress| with transitions | [_RESPONSE_, ACK, UPDATE, UPDATE, UPDATE_ERROR] | and behaviour id | 12 |
|test interaction pattern | Progress| with transitions | [ACK, UPDATE, UPDATE, UPDATE_ERROR, _RESPONSE_] | and behaviour id | 13 |
|test interaction pattern | Progress| with transitions | [ACK, UPDATE, UPDATE, RESPONSE_ERROR, _RESPONSE_] | and behaviour id | 14 |
|test interaction pattern | Progress| with transitions | [ACK_ERROR, _ACK_] | and behaviour id | 15 |

